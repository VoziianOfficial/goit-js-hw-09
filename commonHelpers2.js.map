{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const form = document.querySelector(\".feedback-form\");\nconst STORAGE_KEY = \"feedback-form-state\";\n\nlet formData = {\n  email: \"\",\n  message: \"\"\n};\n\n// Функція сохранения formData в localStorage\nfunction saveFormDataToLocalStorage() {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n}\n\n// Функція загрузки даних з localStorage в formData та заповнення форми\nfunction loadFormDataFromLocalStorage() {\n  const savedData = localStorage.getItem(STORAGE_KEY);\n  if (savedData) {\n    formData = JSON.parse(savedData);\n    updateFormFields();\n  }\n}\n\n// Функція оновления полей форми на основі даних з formData\nfunction updateFormFields() {\n  form.elements.email.value = formData.email;\n  form.elements.message.value = formData.message;\n}\n\n// Слухач подій input для відстеженя зін в формі\nform.addEventListener('input', (event) => {\n  const { name, value } = event.target;\n  if (name in formData) {\n    formData[name] = value.trim();\n    saveFormDataToLocalStorage();\n  }\n});\n\n// Слухач подій submit для перевірки полей до відправки форми\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  if (formData.email.trim() === '' || formData.message.trim() === '') {\n    alert('Fill please all fields');\n    return;\n  }\n\n  console.log(formData);\n\n  // Очистка localStorage та formData після успішної відправки форми\n  localStorage.removeItem(STORAGE_KEY);\n  formData = { email: \"\", message: \"\" };\n  updateFormFields();\n});\n\n// При завантажені сторінки перевірка localStorage \nloadFormDataFromLocalStorage();\n  \n\n\n// ============================== 2 ==============================\n\n\n\n\n// const STORAGE_KEY = \"feedback-form-state\";\n\n// const form = document.querySelector(\".feedback-form\");\n\n// populateForm();\n\n// form.addEventListener(\"submit\", handleFormSubmit);\n// form.addEventListener(\"input\", handleFormInput);\n\n// /*\n//  * - Скасовуємо стандартну поведінку\n//  * - Видаляємо повідомлення зі сховища\n//  * - Очищуємо форму\n//  */\n\n// function handleFormSubmit(event) {\n//   event.preventDefault();\n\n//   localStorage.removeItem(STORAGE_KEY);\n\n//   event.currentTarget.reset();\n// }\n\n// /*\n//  * - Отримуємо значення поля\n//  * - Зберігаємо його у сховище\n//  */\n\n// function handleFormInput(event) {\n//   const value = event.target.value;\n//   const key = event.target.name;\n\n//   let savedFeedbackData = {};\n\n//   try {\n//     savedFeedbackData = JSON.parse(localStorage.getItem(STORAGE_KEY));\n//   } catch (err) {\n//     console.log(err);\n//     return;\n//   }\n\n//   // якщо в ЛС існують дані (обʼєкт), то ми звертаємось вже до існуючого обʼєкту, та змінюмо/створюємо поля зі значеннями\n//   if (savedFeedbackData) {\n//     savedFeedbackData[key] = value;\n//   } else {\n//     // якщо в ЛС немає взагалі даних (обʼєкту), то ми його самостійно створюємо та записуємо туди перший ключ з значенням\n//     savedFeedbackData = {\n//       [key]: value,\n//     };\n//   }\n\n//   try {\n//     localStorage.setItem(STORAGE_KEY, JSON.stringify(savedFeedbackData));\n//   } catch (err) {\n//     console.log(err);\n//     return;\n//   }\n// }\n\n// /*\n//  * - Отримуємо значення зі сховища\n//  * - Якщо там щось було, оновлюємо DOM\n//  */\n\n// function populateForm() {\n//   let savedFeedbackData = {};\n\n//   try {\n//     savedFeedbackData = JSON.parse(localStorage.getItem(STORAGE_KEY));\n//   } catch (err) {\n//     console.log(err);\n//     return;\n//   }\n\n//   // якщо в ЛС не існує таке значення, то виходимо з фукнції\n//   if (!savedFeedbackData) {\n//     return;\n//   }\n\n//   for (const key in savedFeedbackData) {\n//     form.elements[key].value = savedFeedbackData[key];\n//   }\n// }\n"],"names":["form","STORAGE_KEY","formData","saveFormDataToLocalStorage","loadFormDataFromLocalStorage","savedData","updateFormFields","event","name","value"],"mappings":"oCAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAc,sBAEpB,IAAIC,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAGA,SAASC,GAA6B,CACpC,aAAa,QAAQF,EAAa,KAAK,UAAUC,CAAQ,CAAC,CAC5D,CAGA,SAASE,GAA+B,CACtC,MAAMC,EAAY,aAAa,QAAQJ,CAAW,EAC9CI,IACFH,EAAW,KAAK,MAAMG,CAAS,EAC/BC,IAEJ,CAGA,SAASA,GAAmB,CAC1BN,EAAK,SAAS,MAAM,MAAQE,EAAS,MACrCF,EAAK,SAAS,QAAQ,MAAQE,EAAS,OACzC,CAGAF,EAAK,iBAAiB,QAAUO,GAAU,CACxC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC1BC,KAAQN,IACVA,EAASM,CAAI,EAAIC,EAAM,KAAI,EAC3BN,IAEJ,CAAC,EAGDH,EAAK,iBAAiB,SAAWO,GAAU,CAGzC,GAFAA,EAAM,eAAc,EAEhBL,EAAS,MAAM,SAAW,IAAMA,EAAS,QAAQ,KAAM,IAAK,GAAI,CAClE,MAAM,wBAAwB,EAC9B,MACD,CAED,QAAQ,IAAIA,CAAQ,EAGpB,aAAa,WAAWD,CAAW,EACnCC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EACnCI,GACF,CAAC,EAGDF"}